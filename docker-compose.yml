version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: home-library-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    networks:
      - home-library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: home-library-app
    restart: unless-stopped
    environment:
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_SYNCHRONIZE=${DB_SYNCHRONIZE}
      - DB_LOGGING=${DB_LOGGING}
      - CRYPT_SALT=${CRYPT_SALT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_SECRET_REFRESH_KEY=${JWT_SECRET_REFRESH_KEY}
      - TOKEN_EXPIRE_TIME=${TOKEN_EXPIRE_TIME}
      - TOKEN_REFRESH_EXPIRE_TIME=${TOKEN_REFRESH_EXPIRE_TIME}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - home-library-network
    volumes:
      - ./src:/app/src:ro
    command: ["node", "dist/src/main.js"]

  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: home-library-app-dev
    restart: unless-stopped
    environment:
      - PORT=${PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_SYNCHRONIZE=true
      - DB_LOGGING=${DB_LOGGING}
      - CRYPT_SALT=${CRYPT_SALT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_SECRET_REFRESH_KEY=${JWT_SECRET_REFRESH_KEY}
      - TOKEN_EXPIRE_TIME=${TOKEN_EXPIRE_TIME}
      - TOKEN_REFRESH_EXPIRE_TIME=${TOKEN_REFRESH_EXPIRE_TIME}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - home-library-network
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nest-cli.json:/app/nest-cli.json
    command: ["npm", "run", "start:dev"]
    profiles:
      - dev

networks:
  home-library-network:
    driver: bridge
    name: home-library-network

volumes:
  postgres_data:
    driver: local
  postgres_logs:
    driver: local 